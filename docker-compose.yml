version: '3.8'

services:
  # Base de datos PostgreSQL principal para SIGRE
  db-sigre-web:
    container_name: db-sigre-web
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: db-sigre-web
      POSTGRES_USER: sigre-web
      POSTGRES_PASSWORD: S1greW3b@2025!
      TZ: America/Lima
    ports:
      - "5432:5432"
    volumes:
      - sigre_db_data:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sigre-web -d db-sigre-web"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: ["postgres", "-c", "timezone=America/Lima"]

  # Config Server (Configuraci√≥n Centralizada)
  config-server:
    build:
      context: ./03. backend
      dockerfile: config-server/Dockerfile
    container_name: config-server
    restart: unless-stopped
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native,docker
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/spring-cloud-samples/config-repo
      - SPRING_CLOUD_CONFIG_SERVER_GIT_ENABLED=false
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=classpath:/config
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx256m -Xms128m -Duser.timezone=America/Lima
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Discovery Server (Eureka)
  discovery-server:
    build:
      context: ./03. backend
      dockerfile: discovery-server/Dockerfile
    container_name: discovery-server
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - TZ=America/Lima
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # API Gateway
  api-gateway:
    build:
      context: ./03. backend
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "9080:9080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # üìù CONFIGURACI√ìN DE LOGS - Limitar tama√±o y rotaci√≥n
    logging:
      driver: "json-file"
      options:
        max-size: "50m"      # M√°ximo 50MB por archivo de log
        max-file: "3"        # Mantener m√°ximo 3 archivos rotados
        compress: "true"     # Comprimir archivos rotados

  # Microservicio de Asistencia
  asistencia-service:
    build:
      context: ./03. backend
      dockerfile: asistencia-service/Dockerfile
    container_name: asistencia-service
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-sigre-web:5432/db-sigre-web
      - SPRING_DATASOURCE_USERNAME=sigre-web
      - SPRING_DATASOURCE_PASSWORD=S1greW3b@2025!
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db-sigre-web:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/api/time/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # üìù CONFIGURACI√ìN DE LOGS - Limitar tama√±o y rotaci√≥n
    logging:
      driver: "json-file"
      options:
        max-size: "50m"      # M√°ximo 50MB por archivo de log
        max-file: "3"        # Mantener m√°ximo 3 archivos rotados
        compress: "true"     # Comprimir archivos rotados

  # Inventory Service
  inventory-service:
    build:
      context: ./03. backend
      dockerfile: inventory-service/Dockerfile
    container_name: inventory-service
    restart: unless-stopped
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-sigre-web:5432/db-sigre-web
      - SPRING_DATASOURCE_USERNAME=sigre-web
      - SPRING_DATASOURCE_PASSWORD=S1greW3b@2025!
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
      - SERVER_PORT=8080
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db-sigre-web:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Orders Service
  orders-service:
    build:
      context: ./03. backend
      dockerfile: orders-service/Dockerfile
    container_name: orders-service
    restart: unless-stopped
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-sigre-web:5432/db-sigre-web
      - SPRING_DATASOURCE_USERNAME=sigre-web
      - SPRING_DATASOURCE_PASSWORD=S1greW3b@2025!
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
      - SERVER_PORT=8080
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db-sigre-web:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Products Service
  products-service:
    build:
      context: ./03. backend
      dockerfile: products-service/Dockerfile
    container_name: products-service
    restart: unless-stopped
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-sigre-web:5432/db-sigre-web
      - SPRING_DATASOURCE_USERNAME=sigre-web
      - SPRING_DATASOURCE_PASSWORD=S1greW3b@2025!
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
      - SERVER_PORT=8080
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db-sigre-web:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Sync Service (Sincronizaci√≥n PostgreSQL ‚Üî Oracle)
  sync-service:
    build:
      context: ./03. backend
      dockerfile: sync-service/Dockerfile
    container_name: sync-service
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=America/Lima
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=America/Lima
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      # CONFIGURACI√ìN ORACLE A TRAV√âS DEL PROXY DE WINDOWS
      - SPRING_DATASOURCE_REMOTE_HOST=10.100.14.10
      - SPRING_DATASOURCE_REMOTE_PORT=1522
      - SPRING_DATASOURCE_REMOTE_SERVICE_NAME=heimdall
      - SPRING_DATASOURCE_REMOTE_USERNAME=transmarina
      - SPRING_DATASOURCE_REMOTE_PASSWORD=transmarina
      # Configuraci√≥n local PostgreSQL
      - SPRING_DATASOURCE_LOCAL_URL=jdbc:postgresql://db-sigre-web:5432/db-sigre-web
      - SPRING_DATASOURCE_LOCAL_USERNAME=sigre-web
      - SPRING_DATASOURCE_LOCAL_PASSWORD=S1greW3b@2025!
      # Timeouts para Oracle
      - ORACLE_NET_CONNECT_TIMEOUT=120000
      - ORACLE_NET_READ_TIMEOUT=120000
    dns:
      - 8.8.8.8
      - 8.8.4.4      
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      discovery-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      db-sigre-web:
        condition: service_healthy
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        compress: "true"
  
  # Frontend Angular - M√≥dulo de Asistencia
  sigre-frontend:
    build:
      context: ./02. frontend
      dockerfile: Dockerfile
    container_name: sigre-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
      - TZ=America/Lima
      - API_URL=http://10.100.14.102:8084
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - asistencia-service
      - api-gateway
    networks:
      - sigre-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  sigre_db_data:
    driver: local

networks:
  sigre-network:
    driver: bridge