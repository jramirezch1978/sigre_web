Modulo de asistencia, con una interfaz responsive que se adapte a una table, que tenga un reloj en la interfaz
este reloj sería digital, con formato hh:mm:ss am/pm, que muestre la hora del servidor, no la de la tablet
en este caso del servidor, en este caso sería un pequeño backend que por ahora sacaría la hora del servidor donde 
se esta ejecutando la aplicación

Tipo de Racion = Desayuno, Almuerzo y Cena
Horario => hasta el mediodía el trabajador puede elegir si va a consumir almuerzo y/o Cena (puede elegir los dos)
pasado el mediodia, solo tiene opción  a elegir cena

en la pantalla principal, debe ingresar el codigo de tarjeta de proximidad, el cual es un eequipo lector de tarje te proximidad
que esta conectado a la tablet, es un periferico
luego de ingresar el codigo debe aparecer una segunda pantalla donde elija el tipo de ración que va a solicitar
 por ahora todo la data va a estar mockeado, procede

 Angular 18, angular material, totalmente responsive, diseño profesional, que sea elegante para una empresa
 de rubro hidrobiologico

 el docker esta en un servidor virtual box, con ip 10.100.14.102, que en estos momento portainer, http://10.100.14.102:9000/#!/3/docker/stacks
 y se va necesitar crear un contenedor para poner esta aplicacion

 luego de crear el frontend en angular, quiero que coloques en un readme.md, los comandos para poderlo levantar en el dockerlo y probarlo

 la aplicacion frontend usar el puerto 9080 en el docker, con protocolo http por ahora


 como la fecha y hora la voy a sacar del microservicio, que estara dentro de un contenedor en docker, 
 y este contener va  estar euna versión de linux, entonces al momento de crear el contenedor, debería 
 estar enlazado con un servicio que actualice su fecha y hora del linux que va estar en el contenedor
 y el cual va a dar la fecha y hora al sistema de asistencia, por cierto la zona horaria es "America/Lima"
 tenlo en cuanta cuando se levante el linux del contenedor para tener una hora correcta

 debe haber un solo docker composer para todo el proyecto, el cual esta en la raiz, en dicho docker composer
 se tiene la configuracion de la base de datos db-sigre-web la cual va a estar en postgresql, ya con el usuario y la contraseña

 en dicho docker composer, añade el frontend y el microservicio que hemos creado, procede
